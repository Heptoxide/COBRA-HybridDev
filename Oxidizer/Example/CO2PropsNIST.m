function [Props] = CO2PropsNIST(T,rho)
 %#eml
 %% INTRODUCTION
 %==========================================================================
 % Purpose:
 % Returns a sturcture containing the thermodynamic properties for saturated

 % carbon dioxide (CO2) for a given density (kg/mˆ3) and temperature (K).
 % Valid temperature and pressure ranges are:
 % 216.59 K  T  303.69K 0 MPa  P  800 MPa
 %??????????????????????????????????????????????????????????????????????????
 % The properties in the structure are:
 %??????????????????????????????????????????????????????????????????????????
 % P X s u cv cp h c
 % rho l s l u l cv l cp l h l c l
 % rho v s v u v cv v cp v h v c v
 %??????????????????????????????????????????????????????????????????????????
 % Inputs:
 % T ? Temperature, K
 % rho ? Density, kg/m3
 % Outputs:
 % P ? Pressure, MPa
 % X ? Quality, (Vapor Mass/Total Fluid Mass)
 % s ? Specific Entropy, kJ/(kg*K)
 % u ? Specific Internal Energy, kJ/kg
 % cv ? Specific Heat at Constant Volume, kJ/(kg*K)
 % cp ? Specific Heat at Constant Pressure, kJ/(kg*K)
 % h ? Specific Enthalpy, kJ/kg
 % c ? Speed of Sound, m/s
 % rho ? Density, kg/m3
 % state ? ?1 = Negative Input, 0 = Liquid, 1 = Saturated, 2 = Gas
 % l ? Liquid designator
 % v ? Vapor designator
 %??????????????????????????????????????????????????????????????????????????
 % Revision History:
 % Written for a CO2 Blowdown model developed at Utah State University by
 % Brian Solomon
 %??????????????????????????????????????????????????????????????????????????
 % Based upon the Helmholtz Energy based equations of state described by
 % Span, R. and Wagner, W. in
 % "A New Equation of State for Carbon Dioxide Covering the Fluid Region
 % from the Triple?Point Temperature to 1100 K at Pressures up to 800 MPa"

 % Journal of Physical and Chemical Reference Data
 % Vol 25, No. 6, 1996. Pp 1509?1596
 %??????????????????????????????????????????????????????????????????????????

 %% CALCULATE THE SATURATION PROPERTIES
 %==========================================================================
 % CO2 Constants
 %??????????????????????????????????????????????????????????????????????????
 R = 0.1889241; % Gas constant, kJ/(kg*K)
 Tt = 216.592; % Triple point temperature, K (Eq. 3.1)
 Pt = 0.51795; % Triple point pressure, MPa (Eq. 3.2)
 Tc = 304.1282; % Critical temperature, K (Eq. 3.3)
 Pc = 7.3773; % Critical pressure, MPa (Eq. 3.4)
 rhoc = 467.6; % Critical density, kg/m3 (Eq. 3.5)
 %f
 %% Load the CO2 properties created by the NIST Webbook
 %==========================================================================
 [labels,T NIST,y] = readColData('SatCO2Props.txt',25);
 P NIST = y(:,1); % Pressure (MPa)
 rho l NIST = y(:,2); % Density (l, kg/m3)
 rho v NIST = y(:,14); % Density (v, kg/m3)
 u l NIST = y(:,4); % Internal Energy (l, kJ/kg)
 u v NIST = y(:,16); % Internal Energy (v, kJ/kg)
 h l NIST = y(:,5); % Enthalpy (l, kJ/kg)
 h v NIST = y(:,17); % Enthalpy (v, kJ/kg)
 s l NIST = y(:,6); % Entropy (l, J/g*K)
 s v NIST = y(:,18); % Entropy (v, J/g*K)
 cv l NIST = y(:,7); % Cv (l, J/g*K)
 cv v NIST = y(:,19); % Cv (v, J/g*K)
 cp l NIST = y(:,8); % Cp (l, J/g*K)
 cp v NIST = y(:,20); % Cp (v, J/g*K)
 c l NIST = y(:,9); % Sound Speed (l, m/s)
 c v NIST = y(:,21); % Sound Speed (v, m/s)
 %g
 SatCO2Props = open('SatCO2Props.mat');

 T NIST = SatCO2Props.T NIST; % Temperature (K)
 P NIST = SatCO2Props.P NIST; % Pressure (MPa)
 rho l NIST = SatCO2Props.rho l NIST; % Density (l, kg/m3)
 rho v NIST = SatCO2Props.rho v NIST; % Density (v, kg/m3)
 u l NIST = SatCO2Props.u l NIST; % Internal Energy (l, kJ/kg)
 u v NIST = SatCO2Props.u v NIST; % Internal Energy (v, kJ/kg)
 h l NIST = SatCO2Props.h l NIST; % Enthalpy (l, kJ/kg)
 h v NIST = SatCO2Props.h v NIST; % Enthalpy (v, kJ/kg)
 s l NIST = SatCO2Props.s l NIST; % Entropy (l, J/g*K)
 s v NIST = SatCO2Props.s v NIST; % Entropy (v, J/g*K)
 cv l NIST = SatCO2Props.cv l NIST; % Cv (l, J/g*K)
 cv v NIST = SatCO2Props.cv v NIST; % Cv (v, J/g*K)
 cp l NIST = SatCO2Props.cp l NIST; % Cp (l, J/g*K)
 cp v NIST = SatCO2Props.cp v NIST; % Cp (v, J/g*K)
 c l NIST = SatCO2Props.c l NIST; % Sound Speed (l, m/s)
 c v NIST = SatCO2Props.c v NIST; % Sound Speed (v, m/s)
 %% Interpolate to find the liquid and vapor properties
 %==========================================================================
 rho l = interp1(T NIST,rho l NIST,T,'spline');
 rho v = interp1(T NIST,rho v NIST,T,'spline');
 P = interp1(T NIST,P NIST,T,'spline');
 s l = interp1(T NIST,s l NIST,T,'spline');
 s v = interp1(T NIST,s v NIST,T,'spline');
 u l = interp1(T NIST,u l NIST,T,'spline');
 u v = interp1(T NIST,u v NIST,T,'spline');
 cp l = interp1(T NIST,cp l NIST,T,'spline');
 cp v = interp1(T NIST,cp v NIST,T,'spline');
 cv l = interp1(T NIST,cv l NIST,T,'spline');
 cv v = interp1(T NIST,cv v NIST,T,'spline');
 h l = interp1(T NIST,h l NIST,T,'spline');
 h v = interp1(T NIST,h v NIST,T,'spline');
 c l = interp1(T NIST,c l NIST,T,'spline');
 c v = interp1(T NIST,c v NIST,T,'spline');

 %% CALCULATE THE PROPERTIES AT THE GIVEN TEMPERATURE AND DENSITY

 %==========================================================================
 % Account for negative density or temperature
 %??????????????????????????????????????????????????????????????????????????
 if rho < 0 j j T < 0
 X = NaN;
 P = NaN;
 s v = NaN; u v = NaN; cp v = NaN;
 cv v = NaN; h v = NaN; c v = NaN;
 s l = NaN; u l = NaN; cp l = NaN;
 cv l = NaN; h l = NaN; c l = NaN;
 s = s v*X + s l*(1?X);
 u = u v*X + u l*(1?X);
 h = h v*X + h l*(1?X);
 cp = cp v*X + cp l*(1?X);
 cv = cv v*X + cv l*(1?X);
 c = NaN;
 state = ?1;
 % SATURATED
 %??????????????????????????????????????????????????????????????????????????
 else
 X = (rho v/rho)*((rho l?rho)/(rho l?rho v));
 s = s v*X + s l*(1?X);
 u = u v*X + u l*(1?X);
 h = h v*X + h l*(1?X);
 cp = cp v*X + cp l*(1?X);
 cv = cv v*X + cv l*(1?X);
 c = c v*X + c l*(1?X);
 state = 1;
 end

 %% CREATE THE OUTPUT STRUCTURE
 %==========================================================================
 Props.P = P; % Pressure
 Props.X = X; % Quality
 Props.s = s; Props.s l = s l; Props.s v = s v; % Entropy

 Props.u = u; Props.u l = u l; Props.u v = u v; % Internal Energy
 Props.cv = cv; Props.cv l = cv l; Props.cv v = cv v; % Specific ...
Heat at Constant Volume
 Props.cp = cp; Props.cp l = cp l; Props.cp v = cp v; % Specific ...
Heat at Constant Pressure
 Props.h = h; Props.h l = h l; Props.h v = h v; % Enthalpy
 Props.c = c; Props.c l = c l; Props.c v = c v; % Speed of Sound
 Props.rho l = rho l;Props.rho v = rho v; % Density
 Props.state = state; % State
 %Props.gma l = cp l/cv l;
 %Props.gma v = cp v/cv v;
 end